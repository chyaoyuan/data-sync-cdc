

version: "3.9"
services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_MESSAGE_MAX_BYTES=2000000000
    depends_on:
      - zookeeper
    restart: always
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  connect:
    image: debezium/connect:1.3
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      - postgres
      - zookeeper
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=data-sync-storage
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    restart: always
  debezium-ui:
    image: debezium/debezium-ui:2.0
    ports:
      - "8089:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083
    links:
      - connect
      - postgres
      - kafka
      - zookeeper
